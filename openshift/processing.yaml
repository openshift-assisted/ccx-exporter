---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ccx-exporter
parameters:
# Deployment
- name: DEPLOYMENT_NAME
  value: ccx-exporter
- name: IMAGE_NAME
  value: ccx-exporter
- name: IMAGE_TAG
  value: latest
- name: REPLICAS
  value: "1"
- name: IMAGE_PULL_POLICY
  value: IfNotPresent
- name: CPU_LIMIT
  value: "1"
- name: CPU_REQUEST
  value: 10m
- name: MEMORY_LIMIT
  value: 512Mi
- name: MEMORY_REQUEST
  value: 256Mi

# Logs
- name: LOGS_LEVEL
  value: "0"

# Valkey
- name: VALKEY_URL
  value: valkey-ccx-exporter-0.valkey-ccx-exporter-headless:6379
- name: VALKEY_PASSWORD_SECRETNAME
  value: valkey-creds
- name: VALKEY_PASSWORD_SECRETKEY
  value: password

# common s3
- name: S3_BASE_ENDPOINT
  value: ""
- name: S3_USE_PATH_STYLE
  value: "false"

# s3
- name: S3_BUCKET
  value: ccx-processing-result
- name: AWS_ACCESS_KEY_ID_SECRETNAME
  value: aws-creds
- name: AWS_ACCESS_KEY_ID_SECRETKEY
  value: accesskeyid
- name: AWS_SECRET_ACCESS_KEY_SECRETNAME
  value: aws-creds
- name: AWS_SECRET_ACCESS_KEY_SECRETKEY
  value: secretaccesskey

# DLQ
- name: DQL_S3_BUCKET
  value: ccx-processing-dlq
- name: DLQ_AWS_ACCESS_KEY_ID_SECRETNAME
  value: dlq-aws-creds
- name: DLQ_AWS_ACCESS_KEY_ID_SECRETKEY
  value: accesskeyid
- name: DLQ_AWS_SECRET_ACCESS_KEY_SECRETNAME
  value: dlq-aws-creds
- name: DLQ_AWS_SECRET_ACCESS_KEY_SECRETKEY
  value: secretaccesskey

# Kafka
- name: KAFKA_BROKERS
  value: kraft-0.kraft:9092
- name: KAFKA_TOPIC
  value: assisted-service-events
- name: KAFKA_USE_SCRAM_AUTH
  value: "true"
- name: KAFKA_USER_SECRETNAME
  value: kafka-secret
- name: KAFKA_USER_SECRETKEY
  value: user
- name: KAFKA_PASSWORD_SECRETNAME
  value: kafka-secret
- name: KAFKA_PASSWORD_SECRETKEY
  value: password


objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${DEPLOYMENT_NAME}
  data:
    config.yaml: |-
      log:
        level: ${LOGS_LEVEL}
      deadletterqueue:
        bucket: ${DQL_S3_BUCKET}
        baseEndpoint: ${S3_BASE_ENDPOINT}
        usePathStyle: ${S3_USE_PATH_STYLE}
        keyPrefix: ccx-exporter/errors
      kafka:
        broker:
          urls: ${KAFKA_BROKERS}
          version: "3.6.0"
          creds:
            useSCRAMSHA512Auth: ${KAFKA_USE_SCRAM_AUTH}
        consumer:
          topic: ${KAFKA_TOPIC}
          group: ccx-exporter
      valkey:
        url: ${VALKEY_URL}
      s3:
        bucket: ${S3_BUCKET}
        baseEndpoint: ${S3_BASE_ENDPOINT}
        usePathStyle: ${S3_USE_PATH_STYLE}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ${DEPLOYMENT_NAME}
  spec:
    replicas: ${{REPLICAS}}
    selector:
      matchLabels:
        app.kubernetes.io/name: ${DEPLOYMENT_NAME}
    template:
      metadata:
        labels:
          app.kubernetes.io/name: ${DEPLOYMENT_NAME}
      spec:
        containers:
        - args:
          - process
          - --config
          - /etc/processing/config.yaml
          env:
          - name: CCXEXPORTER_DEADLETTERQUEUE_CREDS_ACCESSKEYID
            valueFrom:
              secretKeyRef:
                name: ${DLQ_AWS_ACCESS_KEY_ID_SECRETNAME}
                key: ${DLQ_AWS_ACCESS_KEY_ID_SECRETKEY}
          - name: CCXEXPORTER_DEADLETTERQUEUE_CREDS_SECRETACCESSKEY
            valueFrom:
              secretKeyRef:
                name: ${DLQ_AWS_SECRET_ACCESS_KEY_SECRETNAME}
                key: ${DLQ_AWS_SECRET_ACCESS_KEY_SECRETKEY}
          - name: CCXEXPORTER_S3_CREDS_ACCESSKEYID
            valueFrom:
              secretKeyRef:
                name: ${AWS_ACCESS_KEY_ID_SECRETNAME}
                key: ${AWS_ACCESS_KEY_ID_SECRETKEY}
          - name: CCXEXPORTER_S3_CREDS_SECRETACCESSKEY
            valueFrom:
              secretKeyRef:
                name: ${AWS_SECRET_ACCESS_KEY_SECRETNAME}
                key: ${AWS_SECRET_ACCESS_KEY_SECRETKEY}
          - name: CCXEXPORTER_VALKEY_CREDS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${VALKEY_PASSWORD_SECRETNAME}
                key: ${VALKEY_PASSWORD_SECRETKEY}
          - name: CCXEXPORTER_KAFKA_BROKER_CREDS_USER
            valueFrom:
              secretKeyRef:
                name: ${KAFKA_USER_SECRETNAME}
                key: ${KAFKA_USER_SECRETKEY}
          - name: CCXEXPORTER_KAFKA_BROKER_CREDS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${KAFKA_PASSWORD_SECRETNAME}
                key: ${KAFKA_PASSWORD_SECRETKEY}
          image: ${IMAGE_NAME}:${IMAGE_TAG}
          imagePullPolicy: ${IMAGE_PULL_POLICY}
          name: processing
          resources:
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
          volumeMounts:
          - name: config
            mountPath: /etc/processing/
        volumes:
        - name: config
          configMap:
            name: ${DEPLOYMENT_NAME}
